Task Name,Description,Sections,Assignee
"[ARCHIVE] | PIPE | Core CLI Framework","Implement a basic Command Line Interface using `argparse` or `click`. It should accept necessary arguments like a list of shot IDs and the target archive root directory path.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Shot Context Retrieval","Develop functions to retrieve necessary information for a given shot ID, primarily the path to its latest *published* Nuke script, based on studio filesystem conventions or potentially querying an asset management system API (like Flow, if available).","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Nuke Script Parsing","Implement or integrate a robust method to parse `.nk` files. Extract file paths from relevant nodes (e.g., Read, ReadGeo, Precomp, Camera, Axis). Handle common path formats and potentially basic variable/expression evaluation if essential for MVP.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Dependency File Identification & Validation","Implement logic to resolve the extracted file paths (from Task 4) to actual files or sequences on the filesystem. Include detection for frame sequences (e.g., `%04d`, `####`, `$F`). Validate that dependencies exist.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Default Archive Structure Logic","Implement the logic to calculate the target path within the archive for each source file (script and dependencies) based on the default ""Fix"" replication method (e.g., `[Archive Root]/Z_/path/to/file`). Ensure correct handling of drive letters and path separators. Create necessary directories.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | File Copying Implementation","Develop robust file copying functions. Handle potential errors gracefully (e.g., file not found during copy, insufficient permissions, network issues). Consider efficiency for large files/sequences.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Deadline Integration (for Copying)","Develop Deadline job submission logic. Create necessary Deadline plugin/script files to wrap the file copying process (Task 7) so it can be distributed across the render farm. The core CLI tool should be able to submit these jobs.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Logging System","Implement comprehensive logging using Python's `logging` module. Log key steps, successes, failures, missing files, warnings (e.g., script ambiguities identified), and summary information. Output logs to both console and a file.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | FixPS Integration (Trigger)","Develop the FixPS action/plugin. This script will gather selected shot IDs from the FixPS interface and execute the main `fix-archive` CLI tool (Task 2) with the appropriate arguments (shot IDs, archive root).","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Core Orchestration Script","Develop the main script logic that coordinates all MVP tasks: takes input, identifies scripts, parses, identifies dependencies, creates structure, submits copy jobs to Deadline (or copies directly), and logs results.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | MVP Unit & Integration Testing","Write unit tests for critical functions (parsing, path mapping, structure creation) and integration tests for key workflows (CLI execution, FixPS trigger).","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Basic User Documentation (MVP)","Create simple documentation for end-users (Production Coordinators, Data Wranglers) explaining how to use the FixPS action, prerequisites, and where to find logs.","Phase 1: Minimum Viable Product (MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Configurable Archive Structure System","Design and implement a system (e.g., using JSON/YAML configuration files or Python classes) to define alternative archive structure templates (e.g., SPT, client-specific). Update the core logic (Task 6, Task 11) to accept a configuration/template argument and apply the selected structure.","Phase 2: Future Enhancements (Post-MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Nuke Script Repathing Option","Add an optional feature to modify the file paths *within* the copied Nuke script (.nk file) to be relative to the archive root or use context-specific variables.","Phase 2: Future Enhancements (Post-MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Advanced Source Script Selection Logic","Implement more sophisticated methods for identifying the ""correct"" source script in ambiguous situations (e.g., multiple published versions, QC fixes on non-published scripts). This could involve checking modification dates, specific metadata, or providing user prompts/overrides via the CLI or FixPS interface.","Phase 2: Future Enhancements (Post-MVP)","robin.d@fixfx.uk"
"[ARCHIVE] | PIPE | Flow Action Menu Item (AMI) Integration","Develop and deploy a Flow AMI to allow users to right-click on shots or playlists within Flow and trigger the `fix-archive` process. This requires interacting with the Flow API or framework.","Phase 2: 